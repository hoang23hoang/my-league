{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NgocMai\\\\Desktop\\\\myleague\\\\client\\\\src\\\\components\\\\Navbar\\\\CreateTeam.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateTeam() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [imageUrl, setImageUrl] = useState(null);\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleSaveTeam = async () => {\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await axios.post('http://localhost:3001/team/upload', formData);\n\n      // Extract the Cloudinary image URL from the response data\n      const imageUrl = response.data.imageUrl; // Assuming backend provides the URL\n      console.log('Image URL:', imageUrl);\n\n      // Set the image source using the URL\n      setImageUrl(imageUrl); // Update state with the image URL\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"T\\u1EA1o Team\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      alt: \"Team logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSaveTeam,\n      children: \"L\\u01B0u\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateTeam, \"fpWe64jzrNBShBLygxm4AzCVs5c=\");\n_c = CreateTeam;\nvar _c;\n$RefreshReg$(_c, \"CreateTeam\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","CreateTeam","_s","file","setFile","imageUrl","setImageUrl","handleFileChange","event","target","files","handleSaveTeam","formData","FormData","append","response","post","data","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","src","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/NgocMai/Desktop/myleague/client/src/components/Navbar/CreateTeam.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function CreateTeam() {\r\n    const [file, setFile] = useState(null);\r\n    const [imageUrl, setImageUrl] = useState(null);\r\n\r\n    const handleFileChange = (event) => {\r\n        setFile(event.target.files[0]);\r\n    };\r\n    const handleSaveTeam = async () => {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n      \r\n        try {\r\n          const response = await axios.post('http://localhost:3001/team/upload', formData);\r\n      \r\n          // Extract the Cloudinary image URL from the response data\r\n          const imageUrl = response.data.imageUrl; // Assuming backend provides the URL\r\n          console.log('Image URL:', imageUrl);\r\n      \r\n          // Set the image source using the URL\r\n          setImageUrl(imageUrl); // Update state with the image URL\r\n        } catch (error) {\r\n          console.error('Error uploading file:', error);\r\n        }\r\n      };\r\n\r\n    return (\r\n        <div>\r\n        <h1>Tạo Team</h1>\r\n        <input type=\"file\" onChange={handleFileChange} />\r\n        {imageUrl && <img src={imageUrl} alt=\"Team logo\" />}\r\n        <button onClick={handleSaveTeam}>Lưu</button>\r\n      </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMU,gBAAgB,GAAIC,KAAK,IAAK;IAChCJ,OAAO,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAClC,CAAC;EACD,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEX,IAAI,CAAC;IAE7B,IAAI;MACF,MAAMY,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,mCAAmC,EAAEJ,QAAQ,CAAC;;MAEhF;MACA,MAAMP,QAAQ,GAAGU,QAAQ,CAACE,IAAI,CAACZ,QAAQ,CAAC,CAAC;MACzCa,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEd,QAAQ,CAAC;;MAEnC;MACAC,WAAW,CAACD,QAAQ,CAAC,CAAC,CAAC;IACzB,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAEH,oBACIpB,OAAA;IAAAqB,QAAA,gBACArB,OAAA;MAAAqB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBzB,OAAA;MAAO0B,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEpB;IAAiB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAChDpB,QAAQ,iBAAIL,OAAA;MAAK4B,GAAG,EAAEvB,QAAS;MAACwB,GAAG,EAAC;IAAW;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnDzB,OAAA;MAAQ8B,OAAO,EAAEnB,cAAe;MAAAU,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEZ;AAACvB,EAAA,CAjCuBD,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}